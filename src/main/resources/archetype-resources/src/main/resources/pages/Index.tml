<!DOCTYPE html>
<html xmlns:t="http://tapestry.apache.org/schema/tapestry_5_4.xsd" xmlns:p="tapestry:parameter">
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1" />
		<title>${application-name}</title>
		<!-- These client side libraries could be pulled in from WebJars.org -->
		<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/dojo/1.10.4/dijit/themes/claro/document.css" type="text/css" />
		<link rel="stylesheet" href="//ajax.googleapis.com/ajax/libs/dojo/1.10.4/dijit/themes/claro/claro.css" type="text/css" />
		<link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" type="text/css" />
		<link rel="stylesheet" href="//cdn.rawgit.com/SitePen/dgrid/v0.4.0/css/dgrid.css" type="text/css" />
		<link rel="stylesheet" href="//cdn.rawgit.com/SitePen/dgrid/v0.4.0/css/skins/claro.css" type="text/css" />
		<link rel="stylesheet" href="./css/common.css" type="text/css" />
		<link rel="stylesheet" href="./css/application.css" type="text/css" />
	</head>
	<body class="claro">
		<div id="loader">
			<div id="loader-mover">
				<div id="loader-inner">
					<h2 id="loader-message" style="padding: 5px;">Loading ...</h2>
				</div>
			</div>
		</div>
		<div id="main" data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="liveSplitters: true, design: 'headline', gutters: false">
			<div id="app-header" data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region:'top'">
				<div style="float: right; color: #E5E5E5; font-size: 1.2em">
					<i class="fa fa-cog"></i>
					System
					<i class="fa fa-caret-down"></i>&nbsp;
					<i class="fa fa-user"></i>
					Lastname, Firstname
					<i class="fa fa-caret-down"></i>
				</div>
				<h1 id="application-name">${application-name}</h1>
			</div>
			<div id="main-tab-container" data-dojo-type="dijit/layout/TabContainer" data-dojo-props="region: 'center'" style="padding: 0 5px 5px 5px;">
				<!-- INSTRUCTIONS TAB -->
				<div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title: 'Introduction', closable: false">
					<h2>Azudio Web Application Template</h2>
					<p>This application template is designed to get you up to speed as quickly as possible and to provide examples of using various technologies ready for you to modify.</p>
					<p>The application is built as a Single-Page Application where all interaction with the server is done asyncronusly. The main client side technoloty used is the Dojo Toolkit comprising of its AMD loader and the Dijit GUI library, therefore Tapestry is configured not to use the out-of-the-box Bootstrap/jQuery stack.</p>
					<p>
						Features:
						<ul>
							<h4>General</h4>
							<li>Single Page Application</li>
							<li>Basic REST API Setup</li>
							<h4>Client-Side</h4>
							<li>Dojo 1.10.4;</li>
							<ul>
								<li>Integration with Tapestry</li>
								<li>Configuration</li>
								<li>Dijit for building complex application layouts</li>
								<li>AMD/Require</li>
								<li>Configuring the loader to use CDN for external libraries</li>
							</ul>
							<li>An example of a complex application layout (Example GUI)</li>
							<li>SitePen dstore 1.0.0 &amp; dgrid 0.4.0</li>
							<li>Font Awesome 4.3.0</li>
							<h4>Server-Side</h4>
							<li>Tapestry 5.4 (beta-26)</li>
							<li>Tapestry JPA using Hibernate &amp; Configuration</li>
							<li>EasyCriteria for simpler JPA queries</li>
							<li>Maven directory layout</li>
							<li>Fast running with RunJettyRun or the Eclipse Jetty Integration (right-click, run as...)</li>
							<li>Example REST Person API through the Tynamo tapestry-resteasy 5.4 integration</li>
							<h4>Optional</h4>
							<li>Real-Time Support using the Atmosphere Framework through the Azudio tapestry-atmosphere integration</li>
						</ul>
					</p>
					<p>Note: This application starts up in Production mode by default loading the ProductionModule class, so running in Production mode. To set the execution mode add the -Dtapestry.execution-mode=UAT as a JVM System parameter.</p>
				</div>
				<!--  REST TAB -->
				<div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title: 'REST Instructions', closable: false">
					REST API support is provided by the Tynamo RESTEasy integration so it is simple to create REST based APIs. This example application creates a simple REST API for the Person entity.
					<p>
						The Example REST Resources are implemented as Tapestry Services with an Interface and an Implementation, these live in the
						<em>application-package</em>
						.rest package and will be auto-discovered. The implementation can be modified and the changes picked up by the live class reloading mechanism.
					</p>
					<h2>Person API</h2>
					<h3>GET /rest/people</h3>
					<a href="/rest/people">/rest/people</a>
					<p>Returns an array of all the Person entities currently stored</p>
					<h3>POST /rest/people</h3>
					<p>Creates a new Person entity with the given properties:</p>
					<ul>
						<li>name: String : The name of the person to create</li>
					</ul>
					<button id="addPersonButton">Add Person via store</button>
					<h3>PUT /rest/people/{id}</h3>
					<p>Updates the Person entity represented by the {id} with the given properties:</p>
					<ul>
						<li>name: String : The name of the person to create</li>
					</ul>
					<button id="updatePerson1Button">Update name of Person 1 via store</button>
					<button id="updateSelectedPersonButton">Update name of selected item</button>
					<h3>GET /rest/people/{id}</h3>
					<p>Returns the Person entity represented by the {id}</p>
					<a href="/rest/people/1">Test Get Person 1</a>
					<div id="person-grid" class="noLeftBorder" />
				</div>
				<!-- REALTIME TAB -->
				<!-- <div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="title: 'Real Time Instructions', closable: false"> By default the RealTime features are disabled 
				</div> -->
				<!-- DND TAB -->
				<div data-dojo-type="dijit/layout/BorderContainer" data-dojo-props="title: 'DnD', gutters: false, closable: false">
					<div data-dojo-type="dijit/layout/ContentPane" data-dojo-props="region: 'top'">
						<h2>Drag'n'Drop Example</h2>
						<p>This page is an example of how Dojo D'n'D can be used.</p>
						<p>Drag items from the left box into the areas on the right.</p>
						<div style="width: 50%; display: inline-block; vertical-align: top;">
							<div style="padding-right:5px">
								<h2>Source</h2>
								<div data-dojo-type="dojo/dnd/Source" class="container" style="border:1px dashed #ddd;min-height:20px;">
									<div class="dojoDndItem">Wrist watch</div>
									<div class="dojoDndItem">Life jacket</div>
									<div class="dojoDndItem">Toy bulldozer</div>
									<div class="dojoDndItem">Vintage microphone</div>
									<div class="dojoDndItem">TIE fighter</div>
								</div>
							</div>
						</div>
						<div style="width: 50%; display: inline-block; vertical-align: top;">
							<div style="padding-left:5px">
								<h2>Target</h2>
								<div data-dojo-type="dojo/dnd/Source" class="container" style="border:1px dashed #ddd;min-height:20px;">
								</div>
							</div>
						</div>
					</div>
				</div>
			</div>
		</div>
		<script src="./js/dojo-config.js" type="text/javascript"></script>
		<script src="//ajax.googleapis.com/ajax/libs/dojo/1.10.4/dojo/dojo.js" type="text/javascript"></script>
		<script type="text/javascript">require(["app/main"]);</script>
	</body>
</html>